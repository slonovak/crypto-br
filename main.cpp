#include <iostream>
#include <string>
#include<vector>
#include<thread>
#include<mutex>
#include<atomic>
#include<ctime>
#include<unistd.h>
#include<cstdlib>
#include<termios.h>

using namespace std;

mutex m;

string numtobi(int a){
    int t=0;
    string s="";
    while (a>0){
        s=(a%2?"1":"0")+s;
        a/=2;
    }
    return s;
}
string st[256] = {};

void summer(int len, int from, long long to, int step, int f){

    for(int z=from; z < to; z+=step){
    string s,sn="";
    int k=0,sum=0;
    //s=to_string(z);
    //while(s.size()<len)
    //    s = "0"+s;
    s=st[z];
    sn=s;
    for(int i=0;i<s.length();i++){
        sn+=numtobi(int(s[i]));
        sum+=int(s[i]);
    }
     for(int i=0;i<sum%255+12;i++){
         sn+=sn[0];
         sn.erase(0);
         for(int j=0;j<s.length();j++){
             k=(k*int(s[j])+int(s[s.length()-j-1]))%100000;
         }
     }
     if(k==f)
    cout<<"HASHSUM = "<<k<<" "<< s <<endl;
     }
}

int main(){
    int64_t from, to;
    int f, cores;
    cin >> from >> to >> cores>>f;
    vector<thread*> threads(cores);
    for(int i = 0; i < cores; i++)
        threads[i] = new thread(summer, from, i, to, cores, f);


    for(int i = 0; i < cores; i++)
    {
        threads[i]->join();
        delete threads[i];
    }

   return 0;
}

/*string numtobi(int a){
    int t=0;
    string s="";
    while (a>0){
        s=(a%2?"1":"0")+s;
        a/=2;
    }
    return s;
}
int main(){
   string s,sn="";
   int k=1,sum=0;
   cout<<"Imput message:";
   getline(cin,s);
   sn=s;
   for(int i=0;i<s.length();i++){
       sn+=numtobi(int(s[i]));
       sum+=int(s[i]);
   }
    for(int i=0;i<sum%255+12;i++){
        sn+=sn[0];
        sn.erase(0);
        for(int j=0;j<s.length();j++){

        //--------------variants of 29 line--------------
        //    k=(k*int(s[j])+int(s[s.length()-j-1]))%4598;
            k=(k*int(s[j])+int(s[s.length()-j-1]))%6531;
          //  k=(k*int(s[j])+int(s[s.length()-j-1]))%6785;
            //k=(k*int(s[j])+int(s[s.length()-j-1]))%4926;
            //k=(k*int(s[j])+int(s[s.length()-j-1]))%4927;
           // k=(k*int(s[j])+int(s[s.length()-j-1]))%4533;
        //-----------------------------------------------
        }
    }
   cout<<"HASHSUM = "<<k;
   return 0;
}*/
